(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[847],{3905:function(t,e,r){"use strict";r.d(e,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function s(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function a(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){s(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t,e){if(null==t)return{};var r,n,s=function(t,e){if(null==t)return{};var r,n,s={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(s[r]=t[r]);return s}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(s[r]=t[r])}return s}var l=n.createContext({}),p=function(t){var e=n.useContext(l),r=e;return t&&(r="function"==typeof t?t(e):a(a({},e),t)),r},u=function(t){var e=p(t.components);return n.createElement(l.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(t,e){var r=t.components,s=t.mdxType,o=t.originalType,l=t.parentName,u=i(t,["components","mdxType","originalType","parentName"]),m=p(r),d=s,g=m["".concat(l,".").concat(d)]||m[d]||c[d]||o;return r?n.createElement(g,a(a({ref:e},u),{},{components:r})):n.createElement(g,a({ref:e},u))}));function d(t,e){var r=arguments,s=e&&e.mdxType;if("string"==typeof t||s){var o=r.length,a=new Array(o);a[0]=m;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=t,i.mdxType="string"==typeof t?t:s,a[1]=i;for(var p=2;p<o;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7158:function(t,e,r){"use strict";r.r(e),r.d(e,{frontMatter:function(){return a},metadata:function(){return i},toc:function(){return l},default:function(){return u}});var n=r(2122),s=r(9756),o=(r(7294),r(3905)),a={},i={unversionedId:"utils/stats",id:"utils/stats",isDocsHomePage:!1,title:"Stats and tensorboard",description:"`python",source:"@site/docs/utils/stats.md",sourceDirName:"utils",slug:"/utils/stats",permalink:"/docs/utils/stats",editUrl:"https://github.com/microsoft/PyMarlin/edit/master/website/docs/utils/stats.md",version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"NER Token Classification",permalink:"/docs/examples/ner"},next:{title:"Feedback & Credits",permalink:"/docs/credits"}},l=[{value:"Write some stats",id:"write-some-stats",children:[]},{value:"Check tensorboard logs",id:"check-tensorboard-logs",children:[]}],p={toc:l};function u(t){var e=t.components,a=(0,s.Z)(t,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import os\nos.listdir()\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"['.ipynb_checkpoints', 'Untitled.ipynb']\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import pymarlin\nfrom pymarlin.utils.stats import global_stats, StatInitArgs\nfrom pymarlin.utils.writer import build_writer, WriterInitArgs\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"global_stats")," is a singleton variable that can be used across entire application to log stats. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"writers = ['tensorboard','stdout','aml']\nwriterargs = WriterInitArgs(\n    tb_log_dir = './logs'\n    )\nwriter_objects = [build_writer(w, writerargs) for w in writers]\nglobal_stats.rebuild(StatInitArgs(), writer_objects)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"SystemLog: 2021-01-29 16:02:21,033:INFO : pymarlin.utils.writer.tensorboard : 37 : Cleared directory ./logs (skipping azureml dirs)\nSystemLog: 2021-01-29 16:02:21,040:INFO : pymarlin.utils.writer.tensorboard : 40 : Created tensorboard folder ./logs : []\n")),(0,o.kt)("h2",{id:"write-some-stats"},"Write some stats"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"for i in range(10):\n    global_stats.update('loss',random.uniform(0,2), frequent = True ) # adds a new in memory stat\n    global_stats.log_stats(step = i) #actually logs stats to stdout, tensorboard and aml simultaneously\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"SystemLog: 2021-01-29 16:06:40,276:INFO : pymarlin.utils.writer.stdout : 10 : step = 0, iteration : 0\nSystemLog: 2021-01-29 16:06:40,279:INFO : pymarlin.utils.writer.stdout : 10 : step = 0, loss : 0.44372909088471446\nSystemLog: 2021-01-29 16:06:40,284:INFO : pymarlin.utils.writer.stdout : 10 : step = 1, loss : 0.5985009500820384\nSystemLog: 2021-01-29 16:06:40,285:INFO : pymarlin.utils.writer.stdout : 10 : step = 2, loss : 1.5669796666205043\nSystemLog: 2021-01-29 16:06:40,286:INFO : pymarlin.utils.writer.stdout : 10 : step = 3, loss : 0.8748342474891679\nSystemLog: 2021-01-29 16:06:40,288:INFO : pymarlin.utils.writer.stdout : 10 : step = 4, loss : 1.8371541447672195\nSystemLog: 2021-01-29 16:06:40,290:INFO : pymarlin.utils.writer.stdout : 10 : step = 5, loss : 0.18000397399047174\nSystemLog: 2021-01-29 16:06:40,292:INFO : pymarlin.utils.writer.stdout : 10 : step = 6, loss : 0.1455008149921977\nSystemLog: 2021-01-29 16:06:40,293:INFO : pymarlin.utils.writer.stdout : 10 : step = 7, loss : 1.4704800219353158\nSystemLog: 2021-01-29 16:06:40,297:INFO : pymarlin.utils.writer.stdout : 10 : step = 8, loss : 0.8764679987392285\nSystemLog: 2021-01-29 16:06:40,298:INFO : pymarlin.utils.writer.stdout : 10 : step = 9, loss : 0.6293567937040325\n")),(0,o.kt)("h2",{id:"check-tensorboard-logs"},"Check tensorboard logs"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"os.listdir('logs')\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"['events.out.tfevents.1611964941.krishan-surface.16776.1']\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"!tensorboard --logdir logs\n")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"img",src:r(2477).Z})),(0,o.kt)("p",null,"For more info on stats, check the stat module docstring in ",(0,o.kt)("strong",{parentName:"p"},"pymarlin API")," section"))}u.isMDXComponent=!0},2477:function(t,e,r){"use strict";e.Z=r.p+"assets/images/tb_example-0149677b541e8126be275734b06a2c13.jpg"}}]);