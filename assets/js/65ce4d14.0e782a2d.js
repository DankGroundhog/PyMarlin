(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5627],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return f},kt:function(){return m}});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=i.createContext({}),c=function(e){var n=i.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},f=function(e){var n=c(e.components);return i.createElement(o.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,f=l(e,["components","mdxType","originalType","parentName"]),p=c(t),m=a,d=p["".concat(o,".").concat(m)]||p[m]||u[m]||r;return t?i.createElement(d,s(s({ref:n},f),{},{components:t})):i.createElement(d,s({ref:n},f))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,s=new Array(r);s[0]=p;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<r;c++)s[c]=t[c];return i.createElement.apply(null,s)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"},301:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return s},metadata:function(){return l},toc:function(){return o},default:function(){return f}});var i=t(2122),a=t(9756),r=(t(7294),t(3905)),s={sidebar_label:"implementation",title:"plugins.hf_seq_classification.implementation"},l={unversionedId:"reference/plugins/hf_seq_classification/implementation",id:"reference/plugins/hf_seq_classification/implementation",isDocsHomePage:!1,title:"plugins.hf_seq_classification.implementation",description:"HfSeqClassificationPlugin Objects",source:"@site/docs/reference/plugins/hf_seq_classification/implementation.md",sourceDirName:"reference/plugins/hf_seq_classification",slug:"/reference/plugins/hf_seq_classification/implementation",permalink:"/PyMarlin/docs/reference/plugins/hf_seq_classification/implementation",editUrl:"https://github.com/microsoft/PyMarlin/edit/master/website/docs/reference/plugins/hf_seq_classification/implementation.md",version:"current",sidebar_label:"implementation",frontMatter:{sidebar_label:"implementation",title:"plugins.hf_seq_classification.implementation"},sidebar:"referenceSideBar",previous:{title:"plugins.hf_seq_classification.data_classes",permalink:"/PyMarlin/docs/reference/plugins/hf_seq_classification/data_classes"},next:{title:"plugins.hf_seq_classification.module_classes",permalink:"/PyMarlin/docs/reference/plugins/hf_seq_classification/module_classes"}},o=[{value:"HfSeqClassificationPlugin Objects",id:"hfseqclassificationplugin-objects",children:[]}],c={toc:o};function f(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,i.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"hfseqclassificationplugin-objects"},"HfSeqClassificationPlugin Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class HfSeqClassificationPlugin(Plugin)\n")),(0,r.kt)("p",null,"Plugin for Text Sequence Classification using Huggingface models."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"trainer = plugin.setup_trainer()\ntrainer.train()\ntrainer.validate()\n")),(0,r.kt)("h4",{id:"__init__"},"_","_","init","_","_"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"}," | __init__(config: Optional[Dict] = None)\n")),(0,r.kt)("p",null,"CustomArgParser parses YAML config located at cmdline --config_path. If --config_path\nis not provided, assumes YAML file is named config.yaml and present in working directory.\nInstantiates dataclasses:\nself.data_args (arguments.DataInterfaceArguments): Instantiated dataclass containing\nargs.\nself.module_args (arguments.ModuleInterfaceArguments): Instantiated dataclass containing\nargs required to initialize HfSeqClassificationModule class.\nself.distill_args (arguments.DistillationArguments): Instantiated dataclass\nrequired to initialize DistillHfModule.\nSet self.distill_args.enable = True in config file to do knowledge distillation\ninstead of regular training.\nSets properties:\nself.datainterface: data_interface.DataInterface ","[HfSeqClassificationDataInterface]"," object\nself.module: module_interface.ModuleInterface ","[HfSeqClassificationModule]"," object\nThis is used to initialize a Marlin trainer."))}f.isMDXComponent=!0}}]);