(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[162],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return r?n.createElement(g,o(o({ref:t},u),{},{components:r})):n.createElement(g,o({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},601:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return o},metadata:function(){return l},toc:function(){return s},default:function(){return u}});var n=r(2122),a=r(9756),i=(r(7294),r(3905)),o={},l={unversionedId:"getting-started",id:"getting-started",isDocsHomePage:!1,title:"Getting Started",description:"Welcome to PyMarlin, a lightweight PyTorch library for agile deep learning!",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/docs/getting-started",editUrl:"https://github.com/microsoft/PyMarlin/edit/master/website/docs/getting-started.md",version:"current",frontMatter:{},sidebar:"docsSidebar",next:{title:"Installation",permalink:"/docs/installation"}},s=[{value:"Welcome to PyMarlin, a lightweight PyTorch library for agile deep learning!",id:"welcome-to-pymarlin-a-lightweight-pytorch-library-for-agile-deep-learning",children:[]},{value:"Key features",id:"key-features",children:[]},{value:"Start exploring!",id:"start-exploring",children:[{value:"Train your first model with pymarlin",id:"train-your-first-model-with-pymarlin",children:[]},{value:"GLUE task benchmarking",id:"glue-task-benchmarking",children:[]}]},{value:"We want your feedback!",id:"we-want-your-feedback",children:[]}],c={toc:s};function u(e){var t=e.components,o=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"welcome-to-pymarlin-a-lightweight-pytorch-library-for-agile-deep-learning"},"Welcome to PyMarlin, a lightweight PyTorch library for agile deep learning!"),(0,i.kt)("p",null,(0,i.kt)("img",{src:r(2228).Z})),(0,i.kt)("p",null,"PyMarlin was developed with the goal of simplifying the E2E Deep Learning experimentation lifecycle both in public and M365 compliant environments. The library enables an agile way to quickly prototype a new AI scenario on dev box and seamlessly scale it to public and compliant AML.  "),(0,i.kt)("h2",{id:"key-features"},"Key features"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Provides public and enterprise ",(0,i.kt)("strong",{parentName:"li"},"data pre-processing")," recipes, which provides out of the box vanilla and parallel processing. It requires no additional code to run for AML vs non-AML scenarios easily."),(0,i.kt)("li",{parentName:"ul"},"Provides ",(0,i.kt)("strong",{parentName:"li"},"scalable model training")," with support for Single Process, VM, multi-GPU, multi-node, distributed Data Parallel, mixed-precision (AMP, Apex) training. ORT and DeepSpeed based training are going to be available soon!"),(0,i.kt)("li",{parentName:"ul"},"Provides out of the box ",(0,i.kt)("strong",{parentName:"li"},"Plugins")," that can be used for all typical NLP tasks like Sequence Classification, Named Entity Recognition and Seq2Seq text generation."),(0,i.kt)("li",{parentName:"ul"},"Provides ",(0,i.kt)("strong",{parentName:"li"},"model abstraction")," to allow for easy finetuning scenario integration with various Huggingface and Turing models."),(0,i.kt)("li",{parentName:"ul"},"Provides ",(0,i.kt)("strong",{parentName:"li"},"reusable modules")," for model checkpointing, stats collection, Tensorboard and compliant AML logging which can be customized based on your scenario."),(0,i.kt)("li",{parentName:"ul"},"Provides ",(0,i.kt)("strong",{parentName:"li"},"custom arguments parser")," that allows for saving all the default values for arguments related to a scenario in an YAML config file, merging user provided arguments at runtime."),(0,i.kt)("li",{parentName:"ul"},"All core modules are thoroughly ",(0,i.kt)("strong",{parentName:"li"},"unit tested")," and conform to Pylint requirements for ",(0,i.kt)("strong",{parentName:"li"},"seamless Polymer deployment"),".")),(0,i.kt)("h2",{id:"start-exploring"},"Start exploring!"),(0,i.kt)("h3",{id:"train-your-first-model-with-pymarlin"},"Train your first model with pymarlin"),(0,i.kt)("p",null,"Check out ",(0,i.kt)("a",{parentName:"p",href:"/docs/examples/cifar"},"CIFAR image classification")," from the EXAMPLES section."),(0,i.kt)("h3",{id:"glue-task-benchmarking"},"GLUE task benchmarking"),(0,i.kt)("p",null,"Explore how to use pymarlin to ",(0,i.kt)("a",{parentName:"p",href:"/docs/examples/glue-tasks"},"benchmark your models on GLUE tasks"),"."),(0,i.kt)("h2",{id:"we-want-your-feedback"},"We want your feedback!"),(0,i.kt)("p",null,"Reach out to us with your ",(0,i.kt)("a",{parentName:"p",href:"/docs/credits"},"feedback and suggestions"),"."))}u.isMDXComponent=!0},2228:function(e,t,r){"use strict";t.Z=r.p+"assets/images/Marlin-73efc5d08de9d29cb3dff7f255d900bb.png"}}]);