(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5258],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),o=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=o(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=o(r),d=a,m=f["".concat(i,".").concat(d)]||f[d]||p[d]||s;return r?n.createElement(m,c(c({ref:t},u),{},{components:r})):n.createElement(m,c({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,c=new Array(s);c[0]=f;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,c[1]=l;for(var o=2;o<s;o++)c[o]=r[o];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},1017:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return c},metadata:function(){return l},toc:function(){return i},default:function(){return u}});var n=r(2122),a=r(9756),s=(r(7294),r(3905)),c={sidebar_label:"data_classes",title:"plugins.hf_ner.data_classes"},l={unversionedId:"reference/plugins/hf_ner/data_classes",id:"reference/plugins/hf_ner/data_classes",isDocsHomePage:!1,title:"plugins.hf_ner.data_classes",description:"pymarlin.pluguins.hfner.dataclasses",source:"@site/docs/reference/plugins/hf_ner/data_classes.md",sourceDirName:"reference/plugins/hf_ner",slug:"/reference/plugins/hf_ner/data_classes",permalink:"/docs/reference/plugins/hf_ner/data_classes",editUrl:"https://github.com/microsoft/PyMarlin/edit/master/website/docs/reference/plugins/hf_ner/data_classes.md",version:"current",sidebar_label:"data_classes",frontMatter:{sidebar_label:"data_classes",title:"plugins.hf_ner.data_classes"},sidebar:"referenceSideBar",previous:{title:"core.trainer_backend",permalink:"/docs/reference/core/trainer_backend"},next:{title:"plugins.hf_ner.implementation",permalink:"/docs/reference/plugins/hf_ner/implementation"}},i=[{value:"NERProcessor Objects",id:"nerprocessor-objects",children:[]},{value:"NERDataInterface Objects",id:"nerdatainterface-objects",children:[]}],o={toc:i};function u(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,s.kt)("wrapper",(0,n.Z)({},o,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"pymarlin.pluguins.hf_ner.data_classes"),(0,s.kt)("h2",{id:"nerprocessor-objects"},"NERProcessor Objects"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"class NERProcessor(data_interface.DataProcessor)\n")),(0,s.kt)("p",null,"Reads a file (tsv/csv) line by line and tokenizes text using Huggingface AutoTokenizer.\nRequires header ",'"',"Sentence",'"'," and ",'"',"Slot",'"'," for the text and corresponding labels"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"args")," ",(0,s.kt)("em",{parentName:"li"},"arguments.DataArguments")," - Dataclass")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Returns"),":"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"features")," ",(0,s.kt)("em",{parentName:"li"},"List","[transformers.InputFeatures]")," - List of tokenized features.")),(0,s.kt)("h2",{id:"nerdatainterface-objects"},"NERDataInterface Objects"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"class NERDataInterface(data_interface.DataInterface)\n")),(0,s.kt)("p",null,"NER Data Interface"))}u.isMDXComponent=!0}}]);